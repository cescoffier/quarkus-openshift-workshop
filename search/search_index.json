{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>This workshop illustrates how to build intelligent applications using:</p> <ul> <li>OpenShift</li> <li>OpenShift AI/ML Services</li> <li>Quarkus</li> <li>Red Hat Developer Hub</li> <li>Red Hat Trusted Application Pipelines</li> </ul> <p>This workshop covers both the development of such applications and well as its deployment on OpenShift and integration with OpenShift AI/ML Services. It proposes a platform engineering approach to the development of intelligent applications. Thus, the code is developed in CodeSpaces and the deployment is done using Trusted Application Pipelines. The different application components run in OpenShift.</p>"},{"location":"#the-application","title":"The application","text":"<p>The application that is developed in thie workshop is composed of four independent microservices:</p> <ul> <li><code>frontend</code>: a web application that allows users to interact with the application</li> <li><code>hero-service</code>: a Quarkus microservice that provides information about heroes. It uses a PostGreSQL database to store the information.</li> <li><code>villain-service</code>: the counterpart of the hero service, for villain</li> <li><code>fight-service</code>: a microservice that simulates a fight between a hero and a villain. The simulation is done using a Large Language Model (LLM) that is deployed on OpenShift AI/ML Services.</li> </ul> <p>Hero and Villain services</p> <p>The <code>hero-service</code> and <code>villain-service</code> are very similar, but both use different development model. While both are Quarkus applications, the hero service uses the idiomatic Quarkus development model, while the villain service uses the Spring compatibility support from Quarkus.</p>"},{"location":"#the-setup","title":"The setup","text":""}]}