name: Build

env:
  JVM_VERSION: '21'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app:
          - hero-service
          - villain-service
          - fight-service

    name: "Build ${{ matrix.app }}"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JVM_VERSION }}
          distribution: temurin
          cache: maven

      - name: Maven Build for ${{ matrix.app }}
        working-directory: ${{ matrix.app }}
        run: ./mvnw -B clean verify -Dquarkus.http.host=0.0.0.0 -DskipITs=false

  docs:
    runs-on: ubuntu-latest
    name: "Build Docs"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - uses: actions/setup-java@v4
        name: Set up Java 21
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: Generate and Push documentation
        working-directory: docs
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "CI"
          git config --global user.email "clement@redhat.com"
          pip install pipenv
          pipenv install
          pipenv run mike deploy --push --update-aliases 1.0 latest --force
          pipenv run mike set-default --push latest

      - name: Generate documentation
        working-directory: docs
        if: github.ref != 'refs/heads/main'
        run: |
          git config --global user.name "CI"
          git config --global user.email "clement@redhat.com"
          pip install pipenv
          pipenv install
          pipenv run mkdocs build --clean