site_name: Quarkus OpenShift Workshop
repo_url: https://github.com/cescoffier/quarkus-openshift-workshop
edit_uri: edit/main/docs/
docs_dir: docs

nav:
  - Welcome:
    - Presenting the Workshop: 'overview.md'
    - Software requirements:
        - DevSpaces: 'requirements/dev-spaces.md'
        - OpenShift Cluster: 'requirements/openshift-cluster.md'
    - Preparing for the Workshop:
        - Code scaffolding: 'preparation/code-scaffolding.md'
        - Databases: 'preparation/databases.md'
        - Warming up: 'preparation/warming-up.md'
        - Ready?: 'preparation/ready.md'
  - Creating a REST/HTTP microservices:
    - Hero Microservice:
      - Bootstrapping the Hero REST endpoint: 'hero-microservice/bootstrapping.md'
      - Directory structure: 'hero-microservice/directory-structure.md'
      - The JAX-RS Resource: 'hero-microservice/jax-rs-resource.md'
      - Running the application: 'hero-microservice/running-application.md'
      - Testing: 'hero-microservice/testing.md'
      - Packaging and running the application: 'hero-microservice/packaging-running.md'
      - Troubleshooting: 'hero-microservice/troubleshooting.md'
    - Transactions and ORM:
      - Directory structure: 'transactions-orm/directory-structure.md'
      - Installing DB dependencies: 'transactions-orm/installing-db-dependencies.md'
      - Hero Entity: 'transactions-orm/hero-entity.md'
      - HeroService Transactional: 'transactions-orm/heroservice-transactional.md'
      - Adding logic to the HeroResource endpoint: 'transactions-orm/adding-logic.md'
      - Adding data: 'transactions-orm/adding-data.md'
      - CRUD tests in HeroResourceTest: 'transactions-orm/crud-tests.md'
    - From Git to OpenShift:
      - Build and deploy (in a single step): 'containers-cloud/build-deploy.md'
      - Deploying the others microservices: 'containers-cloud/deploying-others.md'
    - Red Hat Trusted Application Pipelines:
      - Security issue: 'trusted-apps/guava-cve-issue.md'
    - Open API: 'open-api.md'
  - One microservice is not microservices:
    - Villain microservice:
      - Directory structure: 'villain-microservice/directory-structure.md'
      - Spring compatibility layer: 'villain-microservice/spring-compatibility-layer.md'
      - Running, testing and packaging: 'villain-microservice/running-testing-packaging.md'
    - Intelligent Fight microservice:
      - Overview of LLM Integration in Quarkus: 'fight-microservice/overview-llm-integration.md'
      - Using Quarkus-LangChain4j Extension: 'fight-microservice/quarkus-langchain4j.md'
      - Code implementation:
        - Adding the quarkus-langchain4j-xxxxx extension: 'fight-microservice/adding-extension.md'
        - Defining LLM interactions with @RegisterAiService: 'fight-microservice/llm-interactions.md'
        - Running, testing and packaging: 'fight-microservice/running-testing-packaging.md'
      - Custom metrics: 'fight-microservice/custom-metrics.md'
  - User Interface:
    - The Web Application: 'user-interface/web-application.md'
  - Conclusion:
    - References: 'conclusion-references.md'

theme:
  name: material
  custom_dir: mkdocs-customizations/overrides
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: blue
      accent: amber
      toggle:
        icon: material/lightbulb-night
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: blue
      accent: orange
      toggle:
        icon: material/lightbulb-on
        name: Switch to light mode
  font:
    text: Roboto
    code: Ubuntu Mono
  icon:
    repo: fontawesome/brands/github
  logo: images/logo.png
  favicon: images/logo.png
  features:
    - navigation.sections
    - content.tabs.link
    - content.code.annotate
    - navigation.instant
    - navigation.indexes
    - navigation.tracking
    - navigation.tabs.sticky

extra_css:
  - extra.css

extra_javascript:
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

markdown_extensions:
  - toc:
      permalink: '#'
  - admonition
  - smarty
  - attr_list
  - md_in_html
  - meta
  - tables
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.snippets
  - pymdownx.inlinehilite
  - pymdownx.details
  - pymdownx.smartsymbols
  - pymdownx.betterem
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg

plugins:
  - search
#  - build_plantuml:
#      render: "server"
#      server: "https://www.plantuml.com/plantuml"
#      output_format: "svg"
#      diagram_root: "docs"
#      output_folder: "target"
#      input_folder: "diagrams"
#      input_extensions: "puml"
#      theme_enabled: true
#      theme_folder: "include/themes"
#      theme_light: "light.puml"
#      theme_dark: "dark.puml"
  - macros:
      verbose: true
      module_name: mkdocs-customizations/macros/docissimo
      include_dir: mkdocs-customizations/macros


extra:
  snippet_dir: snippets
  manifest: manifest.webmanifest
  version:
    provider: mike
